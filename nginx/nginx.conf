# current sorry state of my nginx.conf file
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    # for caching of cookie
    proxy_cache_path cache/  keys_zone=auth_cache:1m;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        # frontend (i guess login page)
        location / {
            proxy_pass http://localhost:3000/; # frontend running on...similar for other services 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;    
        }

        # question
        location /api/ {
            proxy_pass http://localhost:9090/;  
        }

        # # user (pure conjecture, just referencing gaylord article)
        # location /users/ {
        #     auth_request auth;
        #     auth_request_set $userid $upstream_http_x_auth_user;
            
        #     # if fail go back to landing
        #     if ($http_accept ~* "text/html" ) {
        #         error_page 401 403 =200 /;
        #     }
        #     proxy_set_header X-Auth-User $userid;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Forwarded-For $remote_addr;
        #     proxy_pass http://localhost:3001/;  

        # }

        # location = auth {
        #     internal;
        #     # proxy_pass to authenticator service
        #     proxy_set_header Content-Length "";
        #     proxy_set_header X-Dbg $cookie_AUTH;

        #     proxy_cache auth_cache;
        #     proxy_cache_valid 200 204 1m;
        #     proxy_cache_key "$http_authorization"; # jwt?
        # }
    }
}